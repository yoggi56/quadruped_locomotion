"""LCM type definitions
This file automatically generated by lcm.
DO NOT MODIFY BY HAND!!!!
"""

try:
    import cStringIO.StringIO as BytesIO
except ImportError:
    from io import BytesIO
import struct

import msgs.act_command

class hl_command_msg(object):
    __slots__ = ["act"]

    __typenames__ = ["msgs.act_command"]

    __dimensions__ = [[12]]

    def __init__(self):
        self.act = [ msgs.act_command() for dim0 in range(12) ]

    def encode(self):
        buf = BytesIO()
        buf.write(hl_command_msg._get_packed_fingerprint())
        self._encode_one(buf)
        return buf.getvalue()

    def _encode_one(self, buf):
        for i0 in range(12):
            assert self.act[i0]._get_packed_fingerprint() == msgs.act_command._get_packed_fingerprint()
            self.act[i0]._encode_one(buf)

    def decode(data):
        if hasattr(data, 'read'):
            buf = data
        else:
            buf = BytesIO(data)
        if buf.read(8) != hl_command_msg._get_packed_fingerprint():
            raise ValueError("Decode error")
        return hl_command_msg._decode_one(buf)
    decode = staticmethod(decode)

    def _decode_one(buf):
        self = hl_command_msg()
        self.act = []
        for i0 in range(12):
            self.act.append(msgs.act_command._decode_one(buf))
        return self
    _decode_one = staticmethod(_decode_one)

    _hash = None
    def _get_hash_recursive(parents):
        if hl_command_msg in parents: return 0
        newparents = parents + [hl_command_msg]
        tmphash = (0x6163742568af2138+ msgs.act_command._get_hash_recursive(newparents)) & 0xffffffffffffffff
        tmphash  = (((tmphash<<1)&0xffffffffffffffff) + (tmphash>>63)) & 0xffffffffffffffff
        return tmphash
    _get_hash_recursive = staticmethod(_get_hash_recursive)
    _packed_fingerprint = None

    def _get_packed_fingerprint():
        if hl_command_msg._packed_fingerprint is None:
            hl_command_msg._packed_fingerprint = struct.pack(">Q", hl_command_msg._get_hash_recursive([]))
        return hl_command_msg._packed_fingerprint
    _get_packed_fingerprint = staticmethod(_get_packed_fingerprint)

